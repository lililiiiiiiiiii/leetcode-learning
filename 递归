
删除链表的第N个节点（不是很懂递归咋回事啊，要加强！！！！）
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        global count
        if head is None:
            count=0
            return None
        head.next=self.removeNthFromEnd(head.next,n)#将指针调向最后
        count+=1
        return head.next if n==count else head 
        
字符串解码（394）
def decodeString(self, s: str) -> str:
        def dfs(s, i):
            res, multi = "", 0
            while i < len(s):
                if '0' <= s[i] <= '9':
                    multi = multi * 10 + int(s[i])
                elif s[i] == '[':
                    i, tmp = dfs(s, i + 1)
                    res += multi * tmp
                    multi = 0
                elif s[i] == ']':
                    return i, res
                else:
                    res += s[i]
                i += 1
            return res
        return dfs(s,0)
当 s[i] == ']' 时，返回当前括号内记录的 res 字符串与 ] 的索引 i （更新上层递归指针位置）；
当 s[i] == '[' 时，开启新一层递归，记录此 [...] 内字符串 tmp 和递归后的最新索引 i，并执行 res + multi * tmp 拼接字符串。
遍历完毕后返回 res。




